# Даны два неупорядоченных набора целых чисел (может быть, с повторениями).
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n - кол-во элементов первого множества. m - кол-во элементов второго множества.
# Затем пользователь вводит сами элементы множеств

n = int(input('Введите количество элементов первого множества: '))
set_1 = []
for i in range(n):
    a_i = int(input('введите значения:'))
    set_1.append(a_i)
print(set(set_1))
m = int(input('Введите количество элементов второго множества: '))
set_2 = []
for i in range(m):
    a_i = int(input('введите значения:'))
    set_2.append(a_i)
print(set(set_2))
set_1=set(set_1)
set_2=set(set_2)
# d = set_1.union(set_2)
print(sorted(set_1.union(set_2)))

# В фермерском хозяйстве в Карелии выращивают чернику. Она растет на круглой грядке, причем кусты высажены только по окружности.
# Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растет N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод – на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники.
# Эта система состоит из управляющего модуля и нескольких собирающих модулей.
# Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль,
# находясь перед некоторым кустом заданной во входном файле грядки.
# 4
# 1 2 3 4
# 9


n = 4
a = (1, 2, 3, 4)

max = 0

for i in range(n):
	sum_i = sum(a[i:i+3])
	if sum_i> max:
		max = sum_i
if a[0] + a[-1] + a[-2] > max:
	max = a[0] + a[-1] + a[-2]
if a[0] + a[1] + a[-1] > max:
	max = a[0] + a[1] + a[-1]

print(max)
