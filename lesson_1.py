# Задача 1. За день машина проезжает n километров. сколько дней нужно, чтобы проехать маршрут линой m километров? 
# При решении этой задачи нельзя использовать условной инструкцией if и циклами.
# input:
# n = 700
# m = 750

# output:
# 2
# Решение:
# n = int(input('Введите n: '))
# m = int(input('Введите m: '))
# s = (m+n -1)//n

# print(s)

# Задача 2. В некоторой школе решили набрать три новых математических класса и оборудовать кабинеты для них новыми партами.
# За каждой партой может сидеть два ученика.
# Известно количество учащихся в каждом из трех классов.
# Введите наименьшее число парт, которое нужно приобрести для них.

# **Input:**
# 20
# 21
# 22

# **output:**
# 32

# Решение:
# a = int(input('Введите количество учеников в 1-м классе: '))
# b = int(input('Введите количество учеников в 2-м классе: '))
# c = int(input('Введите количество учеников в 2-м классе: '))
# print(f'Требуемое количество парт: {((a+1)//2 + (b+1)//2 + (c+1)//2)}')

# Задача 3. Вагоны в электричке пронумерованы натуральными числами, 
# начиная с 1 (при этом иногда вагоны нумеруются от «головы» поезда, 
# а иногда – с «хвоста»; это зависит от того, в какую сторону едет электричка). 
# В каждом вагоне написан его номер. Витя сел в i-й вагон от головы поезда и обнаружил, 
# что его вагон имеет номер j. Он хочет определить, сколько всего вагонов в электричке. 
# Напишите программу, которая будет это делать или сообщать, 
# что без дополнительной информации это сделать невозможно.

# **Input:**
# 3
# 4

# **Output:**
# 6
# Решение:
# i = int(input('-->' ))
# j = int(input('-->' ))
# if (i ==j):
#     print('Витя не знает количество вагонов')
# else:3
#     print(i+j-1, 'вагонов')

# Задача 4.  Дано натуральное число. 
# Требуется определить, является ли год с данным номером високосным. 
# Если год является високосным, то выведите YES, иначе выведите NO. 
# Напомним, что в соответствии с григорианским календарем, год является високосным, 
# если его номер кратен 4, но не кратен 100, а также если он кратен 400.

# **Input:**

# 2016

# **Output:**

# YES

# Решение:
# year = int(input('Введите год:'))
# result = 'NO'
# if ((year%4 == 0) and (year%100 != 0)) or (year%400 == 0):
#     result = 'YES'

# print(result)

# Решение с тернарным оператором:
# year = int(input('Введите год:'))
# result = 'YES' if ((year%4 == 0) and (year%100 != 0)) or (year%400 == 0) else "NO"
# print(result)

# Решение с моржовым оператором (код в одну строку):
# print('YES' if ((year:=int(input('--> ')))%400 == 0) else 'NO')

# Семинар2 Циклы While
#Задача1. По данному целому неотрицательному n вычислите
# значение n!. N! = 1 * 2 * 3 * … * N (произведение всех
# чисел от 1 до N) 0! = 1 Решить задачу используя цикл
# while

#  n = int(input('введите целое число: '))
# i = 1
# f = 1

# while i <= n:
#     f *= i
#     i += 1
# print(f)

# Задача 2. Дано натуральное число A > 1. Определите, каким по
# счету числом Фибоначчи оно является, то есть
# выведите такое число n, что φ(n)=A. Если А не
# является числом Фибоначчи, выведите число -1.

# n = int(input('n: '))
# f_1 = 1
# f_2 = 1
# num_index = 2

# while f_2 < n:
#     num_index += 1
#     f_1, f_2 = f_2, f_1 + f_2
    
# if f_2 == n:
#     print(num_index)
# else:
#     print(-1)
    
# print(num_index if f_2 == n else -1)

# Задача3. Уставшие от необычно теплой зимы, жители решили узнать,
# действительно ли это самая длинная оттепель за всю историю
# наблюдений за погодой. Они обратились к синоптикам, а те, в
# свою очередь, занялись исследованиями статистики за
# прошлые годы. Их интересует, сколько дней длилась самая
# длинная оттепель. Оттепелью они называют период, в
# который среднесуточная температура ежедневно превышала
# 0 градусов Цельсия. Напишите программу, помогающую
# синоптикам в работе.
# Пользователь вводит число N – общее количество
# рассматриваемых дней (1 ≤ N ≤ 100). В следующих строках
# располагается N целых чисел.
# Каждое число – среднесуточная температура в
# соответствующий день. Температуры – целые числа и лежат в
# диапазоне от –50 до 50
# Input: 6 -> -20 30 -40 50 10 -10
# Output: 2
# 1 вариант решения:
# days = int(input('Days: '))
# count = 0
# max_count = 0
# for i in range(days):
#     temp = int(input('temp: '))
#     if temp > 0:
#         count += 1
#     else:
#         if count > max_count:
#             max_count = count
#         count = 0
# print(max_count) 
#       
# Немного теории про range:
# # len() -> возвращает количество элементов в коллекци
# range(5) -> 0, 1, 2, 3, 4
# range(5, 11) -> 5, 6, 7, 8, 9, 10
# range(1, 11, 2) -> 1, 3, 5, 7, 9 

# 2 вариант решения:
# days = int(input('Days: '))
# days_list = []
# for i in range(days):
#     temp = int(input('temp: '))
#     days_list.append(temp)

# count = 0
# max_count = 0
# for i in range(len(days_list)):
#     if days_list[i] > 0:
#         count += 1
#     else:
#         if count > max_count:
#             max_count = count
#         count = 0
# print(max_count)

# ДОМАШНЕЕ ЗАДАНИЕ К 1 СЕМИНАРУ
# Задача 1: Найдите сумму цифр трехзначного числа.
# 123 -> 6 (1 + 2 + 3)
# 100 -> 1 (1 + 0 + 0)

# num = input('Введите трхзначное число: ')
# s = (int(num[0]) + int(num[1]) + int(num[2]))
# print(s)

# Задача 2: Петя, Катя и Сережа делают из бумаги журавликов. Вместе они сделали S журавликов.
#  Сколько журавликов сделал каждый ребенок, если известно, что Петя и Сережа сделали одинаковое количество журавликов,
#  а Катя сделала в два раза больше журавликов, чем Петя и Сережа вместе?
# 6 -> 1  4  1
# 24 -> 4  16  4
# 60 -> 10  40  10

# num = int(input('Сколько журавликов всего: '))
# kate = int(num/6*4)
# serg = int(kate/4)
# pit = serg
# print (f'{num} -> {serg} {kate} {pit}')

# Задача 3: Вы пользуетесь общественным транспортом? 
# Вероятно, вы расплачивались за проезд и получали билет с номером. 
# Счастливым билетом называют такой билет с шестизначным номером, где сумма первых трех цифр равна сумме последних трех. 
# Т.е. билет с номером 385916 – счастливый, т.к. 3+8+5=9+1+6. 
# Вам требуется написать программу, которая проверяет счастливость билета.
# 385916 -> yes
# 123456 -> no

# num = input('Введите шестизначный номер билета: ')
# left = int(int(num[0]) + int(num[1]) + int(num[2]))
# right = int(int(num[3]) + int(num[4]) + int(num[5]))
# if (left == right):
#     print('yes')
# else:
#     print('no')

# Задача 4: Требуется определить, можно ли от шоколадки размером n × m долек отломить k долек, 
# если разрешается сделать один разлом по прямой между дольками (то есть разломить шоколадку на два прямоугольника).
# 3 2 4 -> yes
# 3 2 1 -> no
# n = int(input('Введите n: '))
# m = int(input('Введите m: '))
# k = int(input('Введите k: '))
# if k % n == 0 or k % m == 0:
#     print ('yes')
# else:
#     print('no')   
